// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`<Blog /> should pass a snapshot testing 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="blog"
        style="border: 1px solid black; width: 50%; border-radius: 5px; padding: 5px; margin: 10px;"
      >
        <h3
          class="blog-title"
        >
           
          Component testing is done with react-testing-library
        </h3>
        <h4
          class="blog-author"
        >
           
          luciano
        </h4>
        <div>
          <div>
            <button>
              Show details
            </button>
          </div>
          <div
            class="togglableContent"
            style="display: none;"
          >
            <div
              class="blog-details"
            >
              <a
                class="details-url"
                href="www.testing.com"
                rel="noopener noreferrer"
                style="display: block; overflow: hidden;"
                target="_blank"
              >
                www.testing.com
              </a>
              <p
                class="blog-likes"
              >
                Likes: 
                4
                 
              </p>
              <button
                class="blog-likes-button"
                style="margin-left: 5px;"
                type="button"
              >
                like it!
              </button>
              <p>
                Author: 
                luciano
              </p>
              <button
                type="button"
              >
                Remove
              </button>
            </div>
            <button>
              cancel
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="blog"
      style="border: 1px solid black; width: 50%; border-radius: 5px; padding: 5px; margin: 10px;"
    >
      <h3
        class="blog-title"
      >
         
        Component testing is done with react-testing-library
      </h3>
      <h4
        class="blog-author"
      >
         
        luciano
      </h4>
      <div>
        <div>
          <button>
            Show details
          </button>
        </div>
        <div
          class="togglableContent"
          style="display: none;"
        >
          <div
            class="blog-details"
          >
            <a
              class="details-url"
              href="www.testing.com"
              rel="noopener noreferrer"
              style="display: block; overflow: hidden;"
              target="_blank"
            >
              www.testing.com
            </a>
            <p
              class="blog-likes"
            >
              Likes: 
              4
               
            </p>
            <button
              class="blog-likes-button"
              style="margin-left: 5px;"
              type="button"
            >
              like it!
            </button>
            <p>
              Author: 
              luciano
            </p>
            <button
              type="button"
            >
              Remove
            </button>
          </div>
          <button>
            cancel
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
